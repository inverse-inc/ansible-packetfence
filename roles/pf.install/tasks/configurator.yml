---
- name: install pf.conf
  template:
    src: pf.conf.j2
    dest: "{{ pf_conf_dir }}/pf.conf"
    mode: 0664
    owner: "{{ pf_user }}"
    group: "{{ pf_group }}"
  diff: true
  notify: restart packetfence-config # to take new DB password into account
  
- name: update default admin password in db through pfperl-api
  command:
  args:
    argv:
      - "{{ pf_perlapi_cmd }}"
      - get
      - "-M"
      - PATCH
      - "{{ pf_api_user }}/{{ pf_admin_user['pid'] }}/password"
      - "-c"
      - "{{ pf_admin_user | to_json }}"
  register: api_user_result
  # failed when status is different from 200
  # pfperl-api always return rc=0
  failed_when: (api_user_result['stdout'] | from_json ).status != 200

- name: fix permissions on pf files
  command: "{{ pf_pfcmd }} fixpermissions"
  when: pkg_update is changed

- name: clear the backend of pfconfig
  command: "{{ pf_pfcmd }} pfconfig clear_backend"
  when: pkg_update is changed

- name: restart packetfence-config service
  service:
    name: packetfence-config
    state: restarted
  when: pkg_update is changed

- name: restart pf services
  command: /usr/local/pf/bin/pfcmd service pf restart
  when: pkg_update is changed

# copy pf-release to currently-at
- name: ensure currently-at file is set
  copy:
    src: "{{ pf_conf_dir }}/pf-release"
    remote_src: yes
    dest: "{{ pf_conf_dir }}/currently-at"
    owner: "{{ pf_user }}"
    group: "{{ pf_group }}"
    mode: preserve

- name: check end of configurator
  uri:
    url: "https://{{ ansible_default_ipv4['address'] }}:{{ pf_webadmin_port }}"
    return_content: yes
    follow_redirects: safe
    validate_certs: no
  register: webadmin_homepage
  until: "'Administrator - PacketFence' in webadmin_homepage['content']"
  retries: 6
  delay: 10